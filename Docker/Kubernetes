Cluster: group of nodes configured to run a functioning KUBERNETES Systen.
Control plane: schedules containers onto nodes based on compute requirements.
PODS: lowest building block; group of one or more containers running on single node; 
SERVICES: defines n/w rules for exposing pods to other pods (or) public internet determined by a selector;
Selector: set of rules to match resources based on metadata; 
Label: key/value pair attached to resources; 
Annotation: non-identifying metadata for retrival by API clients such as tools & lib's; 
DEPLOYMENT: a declerative template (deployment config changes) for creating & scaling pods; 
ReplicationSet: coordinates pod creation, deletion and updates during deployments; 
Volume: a stateful block store for use with ephemeral pods to write persisted data; not a DB;  
Secret: senstive info such as passwords, OAuth tokens, ssh keys; 
StatefulSet: a pod with gurantees on deployment and scaling ordering; 
Request: desired amount of CPU or memory for a container in a pod; 
Resource: any individual KUBERNETES item such as deployment, pod, service or secret e.t.c,

#####################Cluster Installation - Ubuntu 16.4#####################

Ref: https://www.edureka.co/blog/install-kubernetes-on-ubuntu
*Updates to above Installation Link:
-Updating Kubernetes Configuration
-- vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      Environment="KUBELET_EXTRA_ARGS=--cloud-provider=aws" (Add this line to configure CLOUD-PROVIDER)
-Steps Only For Kubernetes Master VM (kmaster)
--Step 3: https://docs.projectcalico.org/v3.5/getting-started/kubernetes/installation/calico
      https://docs.projectcalico.org/v3.5/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
--Step 4: https://github.com/kubernetes/dashboard/wiki/Installation (Used Alternative step to access on http; For AWS open inbound:8001)
      kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/alternative/kubernetes-dashboard.yaml
--Step 6: kubectl proxy --address '0.0.0.0' -p 8001 --accept-hosts '.*' (Only for Demo, not recommended to open to world)
Note: For the Recommended version of Dashboard installation, Dashboard should not be exposed publicly over HTTP. For domains accessed
      over HTTP it will not be possible to sign in. For domains other than localhost and 127.0.0.1, nothing will happen after clicking
      Sign in button on login page.
      https://github.com/kubernetes/dashboard/wiki/Accessing-Dashboard---1.7.X-and-above
--Step 7: kubectl create clusterrolebinding kubernetes-dashboard --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard
-Steps For Only Kubernetes Node VM (knode): For AWS open inbound:6443

AWS Persistant volume: https://blog.scottlowe.org/2018/09/28/setting-up-the-kubernetes-aws-cloud-provider/
https://blog.scottlowe.org/2019/02/18/kubernetes-kubeadm-and-the-aws-cloud-provider/
https://docs.docker.com/ee/ucp/kubernetes/storage/configure-aws-storage/
https://docs.google.com/document/d/17d4qinC_HnIwrK0GHnRlD1FKkTNdN__VO4TH9-EzbIY/edit
https://stackoverflow.com/questions/50668070/kube-controller-manager-doesnt-start-when-using-cloud-provider-aws-with-kubea
https://stackoverflow.com/questions/51197734/kubernetes-controller-manager-error-if-use-kubeadm-init-with-cloud-provider-aw/51201933

KUBECTL Commands:
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| FUNCTION                      | COMMAND                                                                                     | Description                          |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| Proxy to access Dashboard Pod | kubectl proxy --address '0.0.0.0' -p 8001 --accept-hosts '.*'                               | not Recommended to open to world     |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| URL to access Dashboard Pod   | http://**.**.**.**:8001/api/v1/namespaces/kube-system/services/kubernetes-dashboard:/proxy/ | AWS:: IPv4 Public IP; Inbound: 8001  |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| Edit Service (Dashboard)      | kubectl edit svc/kubernetes-dashboard --namespace=kube-system                               | -n : namespace                       |
|                               | kubectl -n kube-system edit service kubernetes-dashboard                                    | Can also use: Node, Pod, Deployment  |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| get                           | kubectl get service kubernetes-dashboard -n kube-system                                     | Can also be used for: Node, Pod;     |
|                               |                                                                                             | Exposes the Service Port provided    |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| Pod Logs                      | kubectl logs kubernetes-dashboard-77fd78f978-g2hts -c counter -n kube-system                | -c: container                        |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| Describe                      | kubectl describe pod kubernetes-dashboard-86bcb9fc9c-rr2l5 --namespace=kube-system          | Can also be used for: Service, Node  |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| Lists pods                    | kubectl get pods -o wide --all-namespaces                                                   |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| create                        | kubectl create -f <FILE>                                                                    |                                      |
                                | kubectl create deployment <pod_name> --image=<>                                             | Can be used for: Service, Node, Pod  |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| Cluster Info                  | kubectl cluster-info                                                                        |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| delete                        | kubectl delete pod POD_NAME                                                                 | Can also be used for: Service, Node  |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| init into container           | kubectl exec -it <POD_NAME> bash                                                            | Browse inside the Container          |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| create Service                | kubectl expose deployment <PODNAME> --type=LoadBalancer --port 80 --name <svc-name> -n <>   |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| Access with Svc name (DNS)    | <service_name>.<Name_Space>.svc.cluster.local                                               |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| Create Deployment             | kubectl run nginx --image nginx --replicas 2 -n <Name_Space>                                |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
| services binded to pod        | kubectl get ep -n <Name_Space>                                                              | ep: end point Service binded to Pod  |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
|                               |                                                                                             |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
|                               |                                                                                             |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
|                               |                                                                                             |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
|                               |                                                                                             |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
|                               |                                                                                             |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
|                               |                                                                                             |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
|                               |                                                                                             |                                      |
+-------------------------------+---------------------------------------------------------------------------------------------+--------------------------------------+
