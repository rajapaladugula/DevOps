------------------Creating a service file-------------------------

Change Directory & Create a file <SERVICE_NAME>.service:
  $cd /etc/systemd/system directory
  $sudo vi bamboo.service

[Unit]
Description=Atlassian Bamboo
After=syslog.target network.target

[Service]
Type=forking
User=<bamboo-user>
ExecStart=<bamboo-install>/bin/start-bamboo.sh
ExecStop=<bamboo-install>/bin/stop-bamboo.sh
SuccessExitStatus=143

[Install]
WantedBy=multi-user.target

The values for <bamboo-user> and <bamboo-install> should be replaced with your Bamboo 'user' and the path to your Bamboo Install directory.
Add Restart=always under the [Service] section of the file to enable the service to respawn after a crash.

Enable the service to start at boot time, Reload the systemd daemon and restart service by running the following in a terminal:
$sudo systemctl enable bamboo.service
$sudo systemctl daemon-reload
$sudo systemctl restart service.service

Confirmation: Stop Bamboo using the provided Bamboo stop script (<bamboo-install>/bin/stop-bamboo.sh) and restart your system to check that
              Bamboo starts as expected
References: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-managing_services_with_systemd-unit_files
         ***https://www.digitalocean.com/community/tutorials/how-to-configure-a-linux-service-to-start-automatically-after-a-crash-or-reboot-part-2-reference
----------------------
Issue:      systemd: test.service operation timed out.Terminating.
Cause:      Check the "Type" in [Service] being used. Here as we used 'Forking': The parent process is expected to exit when start-up is complete
            and the child should continue to run as the main daemon process.
Resolution: Set the Type of your service script either to 'simple' or 'oneshot'. Depending on the behavior of the shell script that is started.
            if the shell script runs an endless loop and does not exit, set Type to simple  otherwise set Type to oneshot. After you have made 
            your changes reload the configuration with $systemctl daemon-reload and start your service.
Reference:  https://confluence.atlassian.com/bamboo/running-bamboo-as-a-linux-service-416056046.html
            https://askubuntu.com/questions/953920/systemctl-service-timed-out-during-start
-----------------------

Search for a Service:  $ps -ef | grep SERVICE_NAME
Kill the process: $sudo kill -9 process_number

-------------------------chkconfig----------------------------
$chkconfig                        : Used to start/stop a service at a particular runlevels of linux.
$sudo chkconfig SERVICE_NAME on : Enable chkconfig for the service.

Reference: https://www.liquidweb.com/kb/chkconfig-command-examples-for-red-hat-and-centos/

Info:
1. start-up scripts are stored in the /etc/init.d/ directory.
2. To check whether the SERVICE daemon was configured to start automatically at boot time, execute the systemctl command with the is-enabled option:
    $sudo systemctl is-enabled SERVICE.service    which should output "enabled"
