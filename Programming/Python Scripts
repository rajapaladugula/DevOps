#Palindrome::
-----------
Strings:[Recursive]
-------
def isPalindrome(s):
    def toChars(s):
        s = s.lower()
        ans = ''
        for c in s:
            if c in 'abcdefghijklmnopqrstuvwxyz':
                ans += c
        return ans
    def isPal(s):
        if len(s) <= 1:
            return True
        else:
            return s[0] == s[-1] and isPal(s[1:-1])
    return isPal(toChars(s))
print(isPalindrome("aba"))

Arrays: [Recursive]
------
def palindrome(arr):
    if len(arr) <= 1:
        return True
    else:
        return arr[0] == arr[-1] and palindrome(arr[1:-1])
arr = [ 1, 2, 3, 2, 1 ];
print(palindrome(arr))
[Iteration]:
-----------
def Palindrome(arr, n):
    flag = 0
    i = 0
    while(i <= n//2 and n != 0):
        if (arr[i] != arr[n - i -1]):
            flag += 1
            break;
        i += 1
    if (flag == 1):
        print("Not a Palindrome")
    else:
        print("Palindrome")
arr = [1, 2, 3, 2, 1]
n = len(arr)
print(Palindrome(arr, n))
======================================================
#Reverse an integer:
-------------------
def reverse(x):
    number = x
    lastDight = 0
    reverse = 0
    while number > 0:
        lastDight = number % 10
        reverse = (reverse*10) + lastDight
        number = number // 10
    return reverse
print(reverse(579))
======================================================
